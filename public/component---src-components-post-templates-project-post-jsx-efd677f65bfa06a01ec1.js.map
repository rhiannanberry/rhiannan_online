{"version":3,"sources":["webpack:///./src/components/post-templates/project-post.jsx"],"names":["appendTags","tags","html","v","map","x","charAt","toUpperCase","slice","sort","forEach","i","ProjectTemplate","post","data","markdownRemark","currentSection","className","title","frontmatter","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"2PAMA,SAASA,EAAWC,EAAMC,GACxB,GAAID,EAAM,CACR,IAAIE,EAAC,uDAUL,OAPAF,EAAOA,EAAKG,KAAI,SAACC,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,OACtDC,OAAOC,SAAQ,SAACL,EAAGM,GACtBR,GAAC,WAAeQ,EAAI,EAAnB,oBAAwCA,EAAxC,IAA6CN,EAA7C,aAGHF,GAAC,UAEUD,EAGb,OAAOA,EAGM,SAASU,EAAT,GAAoC,IACzBC,EADwB,EAARC,KAChCC,eAIR,OACE,kBAAC,IAAD,CAAQC,eAAe,YACrB,yBAAKC,UAAU,0BACb,kBAAC,IAAD,CAAQC,MAAK,GAAKL,EAAKM,YAAYD,QACnC,yBAAKD,UAAU,gBACb,4BAAKJ,EAAKM,YAAYD,OACtB,yBACED,UAAU,uBACVG,wBAAyB,CAAEC,OAAQrB,EAAWa,EAAKM,YAAYlB,KAAMY,EAAKX,YA2B/E,IAAMoB,EAAS","file":"component---src-components-post-templates-project-post-jsx-efd677f65bfa06a01ec1.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql, Link } from 'gatsby';\n\nimport Layout from '../layout/layout';\n\nfunction appendTags(tags, html) {\n  if (tags) {\n    let v = `<div class=\"block\">\n      <h2>Tags üè∑Ô∏è</h2>\n      `;\n    tags = tags.map((x) => x.charAt(0).toUpperCase() + x.slice(1));\n    tags.sort().forEach((x, i) => {\n      v += `<div id=${i % 6} class=\"tag\" key=${i}>${x}</div>`;\n    });\n\n    v = `${v}</div>`;\n\n    return v + html;\n  }\n\n  return html;\n}\n\nexport default function ProjectTemplate({ data }) {\n  const { markdownRemark: post } = data;\n  // TODO: FIX THIS!!!!!!\n  //const { allMarkdownRemark: related } = data;\n\n  return (\n    <Layout currentSection=\"projects\">\n      <div className=\"project-post-container\">\n        <Helmet title={`${post.frontmatter.title}`} />\n        <div className=\"project-post\">\n          <h1>{post.frontmatter.title}</h1>\n          <div\n            className=\"project-post-content\"\n            dangerouslySetInnerHTML={{ __html: appendTags(post.frontmatter.tags, post.html) }}\n          />\n        </div>\n        \n      </div>\n    </Layout>\n  );\n}\n\nfunction relatedBlogPosts(related) {\n  /*\n  {relatedBlogPosts(related.nodes)}\n  if (!related || related.length == 0) { return; }\n  const list = related.map((e) => (<Link key={e.id} to={e.fields.slug}>{e.frontmatter.title}</Link>));\n  return (\n    <>\n      <h2>Related Blog Posts</h2>\n      {list}\n    </>\n  );*/\n  return (\n    <>\n    </>\n  )\n}\n\n\nexport const pageQuery = graphql`\nquery ProjectPostByPath($path: String!) {\n    markdownRemark(fields: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n   \n  }\n`;\n\n\n/*\nTODO: THIS!!!!!!\nquery ProjectPostByPath($path: String!, $projectID:[String]) {\n    markdownRemark(fields: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n   allMarkdownRemark(\n        filter: {frontmatter: {projects: {in: $projectID}}}\n        sort: { order: DESC, fields: [frontmatter___date] }\n        ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          projects\n        }\n      }\n    }\n  }\n \n\n    */"],"sourceRoot":""}